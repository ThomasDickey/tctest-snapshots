dnl Process this file with autoconf to produce a configure script.
AC_REVISION($Revision: 1.1 $)
AC_PREREQ(2.13.20030927)
rm -f config.cache

dnl
AC_INIT(tctest.c)
AC_CONFIG_HEADER(config.h:config_h.in)

CF_CHECK_CACHE
AC_ARG_PROGRAM

AC_PROG_CC
AC_PROG_CPP
AC_GCC_TRADITIONAL

AC_AIX
AC_ISC_POSIX
AC_MINIX

CF_INTEL_COMPILER
CF_PROG_EXT
CF_ANSI_CC_REQD
AC_CONST
AC_C_INLINE
CF_XOPEN_SOURCE

CF_MAKEFLAGS
AC_PROG_INSTALL

AC_PROG_MAKE_SET
CF_DISABLE_ECHO

AC_STDC_HEADERS
AC_HEADER_DIRENT
AC_CHECK_HEADERS( \
termcap.h \
)

AC_LONG_FILE_NAMES

screen=termcap
CF_TERMCAP_LIBS($screen)

cf_tc_funcs=""
cf_tc_externs=""
if test ".$cf_cv_termlib" = .terminfo ; then
	AC_DEFINE(USE_TERMINFO)
	cf_tc_funcs="$cf_tc_funcs tigetint tigetnum tparam tparm"
	cf_tc_externs="$cf_tc_funcs tgoto tigetstr tputs tigetflag"
elif test ".$cf_cv_termlib" = .termcap ; then
	# BSD 'tputs()' may need 'PC' to be set.
	AC_TRY_LINK([],[extern char PC; PC = 0],
		[AC_DEFINE(HAVE_EXTERN_TCAP_PC)])
	cf_tc_funcs="$cf_tc_funcs tgetint tgetnum tparam tparm"
	cf_tc_externs="$cf_tc_funcs tgoto tgetstr tputs tgetent tgetflag"
else
	cf_cv_termlib=none
fi

AC_HAVE_FUNCS($cf_tc_funcs)

CF_LARGEFILE

###	Debugging/development options
CF_WITH_NO_LEAKS
CF_WITH_WARNINGS(Wno-unknown-pragmas)

CF_CURSES_TERM_H

if test ".$cf_cv_termlib" != ".none"
then
	CF_TYPE_OUTCHAR
fi

if test -n "$cf_tc_externs"
then
	CF_MISSING_EXTERN($cf_tc_externs)
fi

CF_MAKE_TAGS
CF_DISABLE_RPATH_HACK

###	output makefile and config.h
AC_OUTPUT(makefile,,,sort)
